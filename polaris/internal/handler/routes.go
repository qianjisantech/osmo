// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	config "polaris/internal/handler/config"
	discovery "polaris/internal/handler/discovery"
	edi "polaris/internal/handler/edi"
	inner "polaris/internal/handler/inner"
	"polaris/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/hostloading",
				Handler: config.ConfigHotLoadingHandler(serverCtx),
			},
		},
		rest.WithPrefix("/polaris/config"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/agent/heatbeat/:identification_code",
				Handler: discovery.DiscoveryHeatBeatHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/agent/register",
				Handler: discovery.DiscoveryRegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/polaris/v1/discovery"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/record/sync",
				Handler: edi.EdiRecordTaskSyncHandler(serverCtx),
			},
		},
		rest.WithPrefix("/polaris/edi/task"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/info/sync",
				Handler: edi.EdiAgentInfoSyncHandler(serverCtx),
			},
		},
		rest.WithPrefix("/polaris/edi/agent"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/record/sync",
				Handler: inner.InnerRecordTaskSyncHandler(serverCtx),
			},
		},
		rest.WithPrefix("/polaris/inner/task"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/info/sync",
				Handler: inner.InnerAgentInfoSyncHandler(serverCtx),
			},
		},
		rest.WithPrefix("/polaris/inner/agent"),
	)
}
