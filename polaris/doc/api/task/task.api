syntax = "v1"

info
(
    title:   "discovery模块"
    desc:    "discovery模块接口定义"
    author:  "philip.shen"
    email:   "philip.shen@jtexpress.com"
    version: "0.0.1"
)

type (

    AgentRecordTaskRunCallBackReq {
      Id string  `json:"id"`
      Status string  `json:"status"`
      Message string  `json:"message"`
      Name string  `json:"name"`
     Success bool `json:"success"`
      Timestamp string `json:"timestamp"`
    }
    AgentRecordTaskRunCallBackResp {
        Success bool `json:"success"`
        Message string `json:"message"`
        Data interface{} `json:"data"`
    }
    AgentRecordTaskSyncReq {
        Id string  `json:"id"`
        Name string `json:"name"`
        Description string `json:"description,optional"`
//        RecordTime []string `json:"record_time"`
        ListenPort string    `json:"listen_port"`
        Status string `json:"status"`
        CreateTime string   `json:"create_time"`
        UpdateTime string `json:"update_time"`
        CreateBy string  `json:"create_by"`
        CreateByName  string  `json:"create_by_name"`
        UpdateBy  string  `json:"update_by"`
        UpdateByName  string  `json:"update_by_name"`
        StartTime string `json:"start_time"`
        EndTime string `json:"end_time"`
        AgentId  string  `json:"agent_id"`
        AgentName string `json:"agent_name"`
        ExecuteTime string `json:"execute_time"`
        TaskType string `json:"task_type,optional"`
    }
    AgentRecordTaskSyncResp {
        Success bool `json:"success"`
        Message string `json:"message"`
    }
)

@server(
    group: task
    prefix: /polaris/agent/task
)
service polaris-api {
    @handler AgentRecordTaskRunCallBack
    post /run/callback(AgentRecordTaskRunCallBackReq) returns (AgentRecordTaskRunCallBackResp)
    @handler AgentRecordTaskSync
    post /sync (AgentRecordTaskSyncReq) returns (AgentRecordTaskSyncResp)
}